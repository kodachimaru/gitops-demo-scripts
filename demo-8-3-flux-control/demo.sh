helm init

# Install Flux

helm repo add fluxcd https://charts.fluxcd.io

helm install \
    --name flux \
    --set helmOperator.create=true \
    --set helmOperator.createCRD=true \
    --set git.url=git@github.com:kodachimaru/gitops-demo-flux-3-control.git \
    --set git.branch=staging \
    --set git.pollInterval=5s \
    --namespace flux \
    fluxcd/flux

export FLUX_FORWARD_NAMESPACE=flux

# Get autogenerated SSH key
#Â Add it to GitHub repo, read/write access (more on this later)
fluxctl identity



# Create target namespace
kubectl create namespace staging
# Create target branch staging from master
git checkout -b staging
git push --set-upstream origin staging
# Watch workloads come up in monitoring



# Monitor Flux workloads
watch "echo ------------- FLUX WORKLOAD LIST ; fluxctl --k8s-fwd-ns flux list-workloads -n staging"
# Watch Flux installing the resources
kubectl logs -f $(kubectl get pods -n flux -o name | grep flux | grep -v helm | grep -v memcached) -n flux



# Automated synch -- done
fluxctl list-workloads -n staging

# Workload release: Updating the image of a workload
# Currently 1.7.9, need feature in 1.8
fluxctl release -n staging \
    --workload=staging:deployment/nginx-deployment \
    --update-image=nginx:1.8

# Looks OK. Will automate the workload to use always the latest!
fluxctl automate -n staging -w staging:deployment/nginx-deployment
git pull
	# Changes to the latest tag!
	# Not what we expected

# Let's put a limit to the latest usable image
fluxctl policy -w staging:deployment/nginx-deployment --tag='nginx=1.8.*'
	# Watch workload migrate to latest patch of 1.8
git pull

# We're experiencing a performance problem, so for the moment we go back to 1.7.9
# Locking to avoid next automated releases
fluxctl lock \
    --workload=staging:deployment/nginx-deployment \
    --user=sosuna \
    --message="Performance problems, fix in progress"
# Release 1.7.9 again
fluxctl release -n staging \
    --workload=staging:deployment/nginx-deployment \
    --update-image=nginx:1.7.9
    	# Error !!
# Ooops. Workload is locked, so we need to force the release to happen
fluxctl release -n staging \
    --workload=staging:deployment/nginx-deployment \
    --update-image=nginx:1.7.9 \
    --force

# We realize that the problem is in 1.8, so we jump to 1.9
fluxctl policy -w staging:deployment/nginx-deployment --tag='nginx=1.9.*'
git pull
cat nginx.deployment.yaml
	# See the image locked at 1.7.9, and the policy saying 1.9.*
# Now we unlock the workload, so that Flux migrates it to 1.9.*, according to policy
fluxctl unlock \
    --workload=staging:deployment/nginx-deployment \
    --user=sosuna \
    --message="Performance problem fixed, now using latest patch of 1.9"
git pull
cat nginx.deployment.yaml
	# When Flux downloads the new image, commits the change to latst 1.9



# Undo
kubectl delete namespace staging
kubectl delete namespace flux
helm delete --purge flux
kubectl delete deployment nginx-deployment
kubectl delete $(kubectl get crd -o name | grep flux)

git checkout master
git branch -D staging
git push origin --delete staging

helm reset

helm repo remove fluxcd
